// SPDX-FileCopyrightText: (c) 2025 Rafal Zajac <rzajac@gmail.com>
// SPDX-License-Identifier: MIT

package mocker_test

import (
	"bytes"
	"fmt"

	"github.com/ctx42/testing/pkg/mocker"
)

func ExampleGenerate() {
	out := &bytes.Buffer{}

	err := mocker.Generate(
		"Case00",
		mocker.WithSrc("testdata/cases"),
		mocker.WithTgt("."),
		mocker.WithTgtOutput(out),
	)
	if err != nil {
		panic(err)
	}

	fmt.Println(out.String())
	// Output:
	// package mocker
	//
	// // Code generated by mocker. DO NOT EDIT.
	//
	// import (
	//	"github.com/ctx42/testing/pkg/mock"
	//	"github.com/ctx42/testing/pkg/tester"
	// )
	//
	// type Case00Mock struct {
	//	*mock.Mock
	//	t tester.T
	// }
	//
	// func NewCase00Mock(t tester.T) *Case00Mock {
	//	t.Helper()
	//	return &Case00Mock{Mock: mock.NewMock(t), t: t}
	// }
	//
	// func (_mck *Case00Mock) Method00() {
	//	_mck.t.Helper()
	//	var _args []any
	//	_mck.Called(_args...)
	// }
}

func ExampleGenerate_usingImportPaths() {
	out := &bytes.Buffer{}

	err := mocker.Generate(
		"Case00",
		mocker.WithSrc("github.com/ctx42/testing/pkg/mocker/testdata/cases"),
		mocker.WithTgt("github.com/ctx42/testing/pkg/goldy"),
		mocker.WithTgtOutput(out),
	)
	if err != nil {
		panic(err)
	}

	fmt.Println(out.String())
	// Output:
	// package goldy
	//
	// // Code generated by mocker. DO NOT EDIT.
	//
	// import (
	//	"github.com/ctx42/testing/pkg/mock"
	//	"github.com/ctx42/testing/pkg/tester"
	// )
	//
	// type Case00Mock struct {
	//	*mock.Mock
	//	t tester.T
	// }
	//
	// func NewCase00Mock(t tester.T) *Case00Mock {
	//	t.Helper()
	//	return &Case00Mock{Mock: mock.NewMock(t), t: t}
	// }
	//
	// func (_mck *Case00Mock) Method00() {
	//	_mck.t.Helper()
	//	var _args []any
	//	_mck.Called(_args...)
	// }
}
